name: Go

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: vault-neo4j

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'
      - name: Install dependencies
        run: |
          go get .
      - name: Test
        run: |
          go test ./neo4j
      # - name: Version Number
      #   env:
      #      GITHUB_SHA: ${{ github.sha }}
      #   run: |
      #      GITDATE=$(git show -s --format=%ci)
      #      DATE=$(date --date="$GITDATE" -u +"%Y%m%d")
      #      HASH=$(git show -s --format=%h)
      #      VERSION="$DATE.$HASH"
      #      echo "BUILD_VERSION=$VERSION >> $GITHUB_ENV"
      #      echo "Build version: $VERSION"
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
       - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true                        
      # - name: Build Docker Image
      #   if: ${{ github.ref != 'ref/heads/main' }}
      #   run: |
      #        make docker-build make docker-build DOCKER_IMAGE_NAME="vault-neo4j:${BUILD_VERSION}"
